# ******** Mend Unified CLI Template for Azure DevOps ********
#
# You may wish to alter this file to override the build tool and Mend scanning technologies.
#
# For more configuration options, please check the technical documentation portal:
# ðŸ“š https://docs.mend.io/bundle/integrations/page/scan_with_the_mend_cli.html
#
# ******** Description ********
# mend dep will automatically use package managers and file system scanning to detect open source components.
# mend code will automatically detect languages and frameworks used in your projects to scan for code weaknesses.

# If you are NOT using a service user, and have multiple organizations, don't forget to set the organization in the scope parameter
# The following values should be added as environment variables with email and userKey being secrets
#    MEND_URL: the mend url that you login to - (https://saas.mend.io) for example
#    MEND_EMAIL: the user email for the mend platform account you wish to scan with
#    MEND_USER_KEY: the token for the account you wish to scan with

name: 'mend-cli-scan'

# Define your own pipeline trigger here:
# Below is defined a trigger for scanning on a push to the main branch and scanning on a push to release branches.  This is considered an ideal time to scan so that an SBOM can be created for software releases and inventory is managed for released software.
trigger:
- main
- release*

pool:
  vmImage: ubuntu-latest

steps:
- script: |

    ### Build the application with your required package manager, e.g: ###
    # - task: NodeTool@0
    # - task: Maven@0
    # - task: NuGetCommand@0
    # - task: Gradle@0
    # - task: PythonScript@0
    # The mend dep scan should be called AFTER a package manager build step such as "mvn clean install -DskipTests=true" or "npm install --only=prod"

    ### Download the Mend Unified CLI ###
    echo Downloading Mend CLI
    curl https://downloads.mend.io/cli/linux_amd64/mend -o /usr/local/bin/mend && chmod +x /usr/local/bin/mend
    
    ### Run a Mend Software Composition Analysis Scan
    echo Run Mend dependencies scan
    mend dep -u -s *//$(System.TeamProject)//$(Build.Repository.Name)_$(Build.SourceBranchName)
    
    ### Run a Mend Static Application Security Analysis Scan
    echo Start Mend code scan
    mend code -s *//$(System.TeamProject)//$(Build.Repository.Name)_$(Build.SourceBranchName)

  env:
    ### Authentication Environment Variable Secrets###
    MEND_EMAIL: $(MEND_EMAIL)
    MEND_USER_KEY: $(MEND_USER_KEY)
    MEND_URL: https://saas.mend.io

  displayName: 'Mend Unified CLI Scan'
